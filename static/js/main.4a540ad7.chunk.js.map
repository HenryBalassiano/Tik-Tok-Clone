{"version":3,"sources":["Video.js","App.js","reportWebVitals.js","index.js"],"names":["Video","source","useState","click","setClicked","count","setCount","videoRef","useRef","audioRef","playRef","ref","onScreen","rootMargin","isIntersecting","setIntersecting","useEffect","observer","IntersectionObserver","entry","current","observe","unobserve","useOnScreen","play","currentTime","style","display","console","log","substring","id","src","alt","IconButton","onClick","fontSize","paused","pause","width","height","type","preload","slice","Swiper","use","Navigation","App","loading","setload","video","author","title","data","setData","loop","spaceBetween","direction","slidesPerView","speed","preloadImages","observeParents","watchSlidesVisibility","watchSlidesProgress","a","fetch","response","json","mediaData","children","i","length","media","push","err","fetchData","className","map","v","index","reddit_video","fallback_url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a540ad7.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nfunction useOnScreen(ref, rootMargin = \"0px\") {\r\n  const [isIntersecting, setIntersecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        setIntersecting(entry.isIntersecting);\r\n      },\r\n      {\r\n        rootMargin,\r\n      }\r\n    );\r\n    if (ref.current) {\r\n      observer.observe(ref.current);\r\n    }\r\n    return () => {\r\n      observer.unobserve(ref.current);\r\n    };\r\n  }, []);\r\n\r\n  return isIntersecting;\r\n}\r\n\r\nfunction Video({ source }) {\r\n  const [play, setPlay] = useState(false);\r\n  const [click, setClicked] = useState(false);\r\n  const [count, setCount] = useState();\r\n  const videoRef = useRef(false);\r\n  const audioRef = useRef(false);\r\n  const playRef = useRef(false);\r\n  const ref = useRef();\r\n  const navSec = useRef(null);\r\n\r\n  const onScreen = useOnScreen(ref, \"-100px\");\r\n\r\n  const clickFunc = () => {\r\n    if (click === false) {\r\n      setClicked(true);\r\n      setCount(1);\r\n    } else {\r\n      setClicked(false);\r\n      setCount(\"\");\r\n      console.log(click);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (onScreen === true) {\r\n      videoRef.current.play();\r\n      audioRef.current.play();\r\n      videoRef.current.currentTime = 0;\r\n      audioRef.current.currentTime = 0;\r\n      playRef.current.style.display = \"none\";\r\n    }\r\n  });\r\n  const videoPlay = () => {\r\n    if (\r\n      videoRef.current.paused === false &&\r\n      audioRef.current.paused === false\r\n    ) {\r\n      videoRef.current.pause();\r\n      audioRef.current.pause();\r\n      playRef.current.style.display = \"block\";\r\n    } else {\r\n      videoRef.current.play();\r\n      audioRef.current.play();\r\n      playRef.current.style.display = \"none\";\r\n    }\r\n  };\r\n  console.log(source.substring(0, 32) + \"DASH_480.mp4?source=fallback\");\r\n  return (\r\n    <div id=\"video-container\" ref={ref}>\r\n      {/* <div id='navbar-section'ref={navSec}>\r\n\r\n                        <a  onClick={()=>{\r\n                              navSec.current.style.display='none'} } class=\"close\"></a>     \r\n\r\n                              <ul id='category-list'>\r\n                              <li className='categories'>\r\n                                faget    \r\n                              </li>      \r\n                                    </ul>          \r\n                                       </div>       */}\r\n      <img ref={playRef} id=\"play-btn\" src=\"./play.png\" alt=\"play\" />\r\n\r\n      <h1 id=\"logo\"> F</h1>\r\n\r\n      {/* <div id='burger-parent' onClick={()=>{\r\n                              navSec.current.style.display='block' \r\n                              videoRef.current.pause()\r\n                              audioRef.current.pause()\r\n                        } }>\r\n                        <div className='burger-btn'></div>\r\n                        <div className='burger-btn'></div>\r\n                        <div className='burger-btn'></div>\r\n                        </div> */}\r\n\r\n      <div id=\"ld\">\r\n        <IconButton id=\"icons\" onClick={clickFunc}>\r\n          {click ? (\r\n            <FavoriteIcon style={{ fontSize: \"40px\" }} />\r\n          ) : (\r\n            <FavoriteBorderIcon style={{ fontSize: \"40px\" }} />\r\n          )}\r\n        </IconButton>\r\n        <span id=\"like-count\">{count}</span>\r\n      </div>\r\n      {onScreen ? (\r\n        <video\r\n          ref={videoRef}\r\n          onClick={videoPlay}\r\n          width=\"450\"\r\n          height=\"900\"\r\n          src={source.substring(0, 32) + \"DASH_480.mp4?source=fallback\"}\r\n          type=\"video/mp4\"\r\n          preload=\"auto\"\r\n        />\r\n      ) : (\r\n        <div>Loading...</div>\r\n      )}\r\n      {onScreen ? (\r\n        <audio ref={audioRef}>\r\n          <source\r\n            preload=\"none\"\r\n            src={source && source.slice(0, 37) + \"audio.mp4\"}\r\n          />\r\n        </audio>\r\n      ) : (\r\n        console.log(\"audio element is loading\")\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Video;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Video from \"./Video\";\nimport Swiper, { Navigation } from \"swiper\";\nimport \"swiper/swiper-bundle.css\";\nSwiper.use([Navigation]);\n\nfunction App() {\n  const [loading, setload] = useState(null);\n  const [data, setData] = useState([\n    {\n      video: [],\n      author: [],\n      title: [],\n    },\n  ]);\n\n  useEffect(() => {\n    const mySwiper = new Swiper(\".swiper-container\", {\n      loop: true,\n      spaceBetween: 830,\n      direction: \"vertical\",\n      slidesPerView: 1,\n      speed: 100,\n      preloadImages: true,\n      observer: true,\n      observeParents: true,\n      watchSlidesVisibility: true,\n      watchSlidesProgress: true,\n    });\n  }, []);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\n        \"https://www.reddit.com/r/tiktokcringe/.json\"\n      );\n\n      const data = await response.json();\n      const video = [];\n      const author = [];\n      const title = [];\n      const mediaData = data.data.children;\n\n      try {\n        for (var i = 5; i < mediaData.length; i++) {\n          if (mediaData[i].data.media !== null)\n            video.push(mediaData[i].data.media);\n          author.push(mediaData[i].data.author);\n          title.push(mediaData[i].data.title);\n        }\n        setData([\n          {\n            video: video,\n            author: author,\n            title: title,\n          },\n        ]);\n        setload(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div id=\"video-scroll\">\n        {data.map(({ video, author, title }) => {\n          return (\n            <div className=\"swiper-container\">\n              <div className=\"swiper-wrapper\">\n                {video.map((v, index) => (\n                  <div className=\"swiper-slide\">\n                    {loading ? (\n                      <Video\n                        className=\"lazy\"\n                        source={v.reddit_video.fallback_url}\n                      />\n                    ) : (\n                      <p>Loading...</p>\n                    )}\n                    <p id=\"author\">@{author[index]}</p>\n                    <p id=\"title\">\n                      {title[index].length < 30\n                        ? title[index]\n                        : title[index].substring(0, 30) + \"...\"}{\" \"}\n                    </p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}